package GUI;

import Database.Database;
import java.awt.Component;
import java.awt.Font;
import java.awt.font.TextAttribute;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import kdesp73.madb.Condition;
import main.MovieCollection;

/**
 *
 * @author thana
 */
public final class SettingsFrame extends javax.swing.JFrame {

        static final String TITLE = "Settings";
        Theme theme;

        Frame f;
        EditFrame ef;
        MovieCollection movies;
        ThemeCollection themeCollection;
        CustomThemeFrame tf;
        static DefaultListModel lm = new DefaultListModel();

        public SettingsFrame() throws SQLException {
                //Frame setup
                initComponents();
                this.setResizable(false);
                this.theme = GUIMethods.setupFrame(this, this.getPreferredSize(), TITLE);

                //Components setup
                movies = new MovieCollection();

                extensionsList.setModel(lm);
                ArrayList<String> exts = movies.getExts();
                for (int i = 0; i < exts.size(); i++) {
                        lm.add(i, exts.get(i));
                }

                try {
                        mediaPlayerPath.setText((String) Database.db().SELECT("Settings", "Media_Player").get(0));
                        fileDirectory.setText((String) Database.db().SELECT("Settings", "Directory").get(0));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }

        public SettingsFrame(Frame f, EditFrame ef) {
                //Setup Frame
                initComponents();
                this.setResizable(false);
                this.theme = GUIMethods.setupFrame(this, this.getPreferredSize(), TITLE);

                //Setup Components
                this.f = f;
                this.ef = ef;
                MovieCollection mc = new MovieCollection();
                themeCollection = new ThemeCollection();

                extensionsList.setModel(lm);
                ArrayList<String> exts = mc.getExts();
                for (int i = 0; i < exts.size(); i++) {
                        lm.add(i, exts.get(i));
                }

                refreshThemeCombo();
                themesList.setSelectedItem(theme.getName());

                try {
                        mediaPlayerPath.setText((String) Database.db().SELECT("Settings", "Media_Player").get(0));
                        fileDirectory.setText((String) Database.db().SELECT("Settings", "Directory").get(0));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                try {
                        fontsList.setSelectedItem((String) Database.db().SELECT("Settings", "Font").get(0));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                Font font = issuesLinkLabel.getFont();
                Map<TextAttribute, Object> attributes = new HashMap<>(font.getAttributes());
                attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
                issuesLinkLabel.setFont(font.deriveFont(attributes));
        }

        /**
         * This method is called from within the
         * constructor to initialize the form.
         * WARNING: Do NOT modify this code. The
         * content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jFileChooser1 = new javax.swing.JFileChooser();
                jFileChooser2 = new javax.swing.JFileChooser();
                settingsPanel = new javax.swing.JPanel();
                jLabel3 = new javax.swing.JLabel();
                fileDirectory = new javax.swing.JTextField();
                jLabel4 = new javax.swing.JLabel();
                themesList = new javax.swing.JComboBox<>();
                jLabel1 = new javax.swing.JLabel();
                mediaPlayerPath = new javax.swing.JTextField();
                jLabel7 = new javax.swing.JLabel();
                fontsList = new javax.swing.JComboBox<>();
                jLabel6 = new javax.swing.JLabel();
                extensionField = new javax.swing.JTextField();
                jLabel8 = new javax.swing.JLabel();
                jScrollPane2 = new javax.swing.JScrollPane();
                extensionsList = new javax.swing.JList<>();
                changeFDbtn = new RoundedPanel();
                changeFDLabel = new javax.swing.JLabel();
                changeMPbtn = new RoundedPanel();
                changeMPLabel = new javax.swing.JLabel();
                addbtn2 = new RoundedPanel();
                addLabel2 = new javax.swing.JLabel();
                removebtn2 = new RoundedPanel();
                removeLabel2 = new javax.swing.JLabel();
                customThemeButton = new RoundedPanel();
                themeLabel = new javax.swing.JLabel();
                issuesLinkLabel = new javax.swing.JLabel();

                jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

                settingsPanel.setName("background"); // NOI18N

                jLabel3.setText("File Directory:");
                jLabel3.setName("label"); // NOI18N

                fileDirectory.setName("textbox"); // NOI18N
                fileDirectory.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                fileDirectoryKeyPressed(evt);
                        }
                });

                jLabel4.setText("Themes:");
                jLabel4.setName("label"); // NOI18N

                themesList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Dark" }));
                themesList.setName(""); // NOI18N
                themesList.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                themesListActionPerformed(evt);
                        }
                });

                jLabel1.setText("Media Player:");
                jLabel1.setMaximumSize(new java.awt.Dimension(41, 16));
                jLabel1.setMinimumSize(new java.awt.Dimension(41, 16));
                jLabel1.setName("label"); // NOI18N

                mediaPlayerPath.setName("textbox"); // NOI18N
                mediaPlayerPath.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                mediaPlayerPathKeyPressed(evt);
                        }
                });

                jLabel7.setText("Font:");
                jLabel7.setMaximumSize(new java.awt.Dimension(43, 16));
                jLabel7.setMinimumSize(new java.awt.Dimension(43, 16));
                jLabel7.setName("label"); // NOI18N
                jLabel7.setPreferredSize(new java.awt.Dimension(43, 16));

                fontsList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agency FB", "Algerian", "Arial", "Arial Black", "Arial Narrow", "Arial Rounded MT Bold", "Arial Unicode MS", "Bahnschrift", "Baskerville Old Face", "Bauhaus 93", "Bell MT", "Berlin Sans FB", "Berlin Sans FB Demi", "Bernard MT Condensed", "Blackadder ITC", "Bodoni MT", "Bodoni MT Black", "Bodoni MT Condensed", "Bodoni MT Poster Compressed", "Book Antiqua", "Bookman Old Style", "Bookshelf Symbol 7", "Bradley Hand ITC", "Britannic Bold", "Broadway", "Brush Script MT", "Calibri", "Calibri Light", "Californian FB", "Calisto MT", "Cambria", "Cambria Math", "Candara", "Candara Light", "Castellar", "Centaur", "Century", "Century Gothic", "Century Schoolbook", "Chiller", "Colonna MT", "Comic Sans MS", "Consolas", "Constantia", "Cooper Black", "Copperplate Gothic Bold", "Copperplate Gothic Light", "Corbel", "Corbel Light", "Courier New", "Curlz MT", "Dialog", "DialogInput", "Dubai", "Dubai Light", "Dubai Medium", "Ebrima", "Edwardian Script ITC", "Elephant", "Engravers MT", "Eras Bold ITC", "Eras Demi ITC", "Eras Light ITC", "Eras Medium ITC", "Felix Titling", "Footlight MT Light", "Forte", "ForteClassic", "ForteFolk", "ForteInk", "ForteJazz", "ForteSamba", "Franklin Gothic Book", "Franklin Gothic Demi", "Franklin Gothic Demi Cond", "Franklin Gothic Heavy", "Franklin Gothic Medium", "Franklin Gothic Medium Cond", "Freestyle Script", "French Script MT", "Gabriola", "Gadugi", "Garamond", "Georgia", "Gigi", "Gill Sans MT", "Gill Sans MT Condensed", "Gill Sans MT Ext Condensed Bold", "Gill Sans Ultra Bold", "Gill Sans Ultra Bold Condensed", "Gloucester MT Extra Condensed", "Goudy Old Style", "Goudy Stout", "Haettenschweiler", "Harlow Solid Italic", "Harrington", "High Tower Text", "HoloLens MDL2 Assets", "Impact", "Imprint MT Shadow", "Informal Roman", "Ink Free", "Javanese Text", "Jokerman", "Juice ITC", "Kristen ITC", "Kunstler Script", "Leelawadee UI", "Leelawadee UI Semilight", "Lucida Bright", "Lucida Calligraphy", "Lucida Console", "Lucida Fax", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Lucida Sans Unicode", "Magneto", "Maiandra GD", "Malgun Gothic", "Malgun Gothic Semilight", "Marlett", "Matura MT Script Capitals", "Microsoft Himalaya", "Microsoft JhengHei", "Microsoft JhengHei Light", "Microsoft JhengHei UI", "Microsoft JhengHei UI Light", "Microsoft New Tai Lue", "Microsoft PhagsPa", "Microsoft Sans Serif", "Microsoft Tai Le", "Microsoft YaHei", "Microsoft YaHei Light", "Microsoft YaHei UI", "Microsoft YaHei UI Light", "Microsoft Yi Baiti", "MidiGuitar", "Midisoft Classic", "MingLiU-ExtB", "MingLiU_HKSCS-ExtB", "Mistral", "Modern No. 20", "Mongolian Baiti", "Monospaced", "Monotype Corsiva", "MS Gothic", "MS Outlook", "MS PGothic", "MS Reference Sans Serif", "MS Reference Specialty", "MS UI Gothic", "MT Extra", "MusicScoreSc", "MusicScoreSce", "MV Boli", "Myanmar Text", "Niagara Engraved", "Niagara Solid", "Nirmala UI", "Nirmala UI Semilight", "NSimSun", "OCR A Extended", "Old English Text MT", "Onyx", "Palace Script MT", "Palatino Linotype", "Papyrus", "Parchment", "Perpetua", "Perpetua Titling MT", "Playbill", "PMingLiU-ExtB", "Poor Richard", "Pristina", "Rage Italic", "Ravie", "Rockwell", "Rockwell Condensed", "Rockwell Extra Bold", "ROG Fonts", "Sans Serif Collection", "SansSerif", "Script MT Bold", "Segoe Fluent Icons", "Segoe MDL2 Assets", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Black", "Segoe UI Emoji", "Segoe UI Historic", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Semilight", "Segoe UI Symbol", "Segoe UI Variable", "Serif", "Showcard Gothic", "SimSun", "SimSun-ExtB", "Sitka Text", "Snap ITC", "Stencil", "Sylfaen", "Symbol", "Tahoma", "TeamViewer15", "Tempus Sans ITC", "Times New Roman", "Trebuchet MS", "Tw Cen MT", "Tw Cen MT Condensed", "Tw Cen MT Condensed Extra Bold", "Verdana", "Viner Hand ITC", "Vivaldi", "Vladimir Script", "Webdings", "Wide Latin", "Wingdings", "Wingdings 2", "Wingdings 3", "Yu Gothic", "Yu Gothic Light", "Yu Gothic Medium", "Yu Gothic UI", "Yu Gothic UI Light", "Yu Gothic UI Semibold", "Yu Gothic UI Semilight" }));
                fontsList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                fontsList.setName(""); // NOI18N
                fontsList.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                fontsListActionPerformed(evt);
                        }
                });

                jLabel6.setText("Extension:");
                jLabel6.setMaximumSize(new java.awt.Dimension(42, 16));
                jLabel6.setMinimumSize(new java.awt.Dimension(42, 16));
                jLabel6.setName("label"); // NOI18N
                jLabel6.setPreferredSize(new java.awt.Dimension(42, 16));

                extensionField.setName("textbox"); // NOI18N
                extensionField.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                extensionFieldKeyPressed(evt);
                        }
                });

                jLabel8.setText("Extension list:");
                jLabel8.setMaximumSize(new java.awt.Dimension(42, 16));
                jLabel8.setMinimumSize(new java.awt.Dimension(42, 16));
                jLabel8.setName("label"); // NOI18N
                jLabel8.setPreferredSize(new java.awt.Dimension(42, 16));

                extensionsList.setName("textbox"); // NOI18N
                jScrollPane2.setViewportView(extensionsList);

                changeFDbtn.setBackground(new java.awt.Color(166, 166, 166));
                changeFDbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                changeFDbtn.setMaximumSize(new java.awt.Dimension(73, 25));
                changeFDbtn.setMinimumSize(new java.awt.Dimension(73, 25));
                changeFDbtn.setName("button"); // NOI18N
                changeFDbtn.setPreferredSize(new java.awt.Dimension(73, 25));
                changeFDbtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                changeFDbtnMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                changeFDbtnMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                changeFDbtnMouseExited(evt);
                        }
                });

                changeFDLabel.setBackground(new java.awt.Color(140, 140, 240));
                changeFDLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                changeFDLabel.setText("Change");
                changeFDLabel.setName("buttonLabel"); // NOI18N
                changeFDLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                changeFDLabelMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                changeFDLabelMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                changeFDLabelMouseExited(evt);
                        }
                });

                javax.swing.GroupLayout changeFDbtnLayout = new javax.swing.GroupLayout(changeFDbtn);
                changeFDbtn.setLayout(changeFDbtnLayout);
                changeFDbtnLayout.setHorizontalGroup(
                        changeFDbtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(changeFDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                changeFDbtnLayout.setVerticalGroup(
                        changeFDbtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(changeFDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                changeMPbtn.setBackground(new java.awt.Color(166, 166, 166));
                changeMPbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                changeMPbtn.setMaximumSize(new java.awt.Dimension(73, 25));
                changeMPbtn.setMinimumSize(new java.awt.Dimension(73, 25));
                changeMPbtn.setName("button"); // NOI18N
                changeMPbtn.setPreferredSize(new java.awt.Dimension(73, 25));
                changeMPbtn.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                changeMPbtnMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                changeMPbtnMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                changeMPbtnMouseExited(evt);
                        }
                });

                changeMPLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                changeMPLabel.setText("Change");
                changeMPLabel.setName("buttonLabel"); // NOI18N

                javax.swing.GroupLayout changeMPbtnLayout = new javax.swing.GroupLayout(changeMPbtn);
                changeMPbtn.setLayout(changeMPbtnLayout);
                changeMPbtnLayout.setHorizontalGroup(
                        changeMPbtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(changeMPLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                );
                changeMPbtnLayout.setVerticalGroup(
                        changeMPbtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(changeMPLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                );

                addbtn2.setBackground(new java.awt.Color(166, 166, 166));
                addbtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                addbtn2.setMaximumSize(new java.awt.Dimension(73, 25));
                addbtn2.setMinimumSize(new java.awt.Dimension(73, 25));
                addbtn2.setName("button"); // NOI18N
                addbtn2.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                addbtn2MouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                addbtn2MouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                addbtn2MouseExited(evt);
                        }
                });

                addLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                addLabel2.setText("Add");
                addLabel2.setMaximumSize(new java.awt.Dimension(73, 25));
                addLabel2.setMinimumSize(new java.awt.Dimension(73, 25));
                addLabel2.setName("buttonLabel"); // NOI18N
                addLabel2.setPreferredSize(new java.awt.Dimension(97, 25));

                javax.swing.GroupLayout addbtn2Layout = new javax.swing.GroupLayout(addbtn2);
                addbtn2.setLayout(addbtn2Layout);
                addbtn2Layout.setHorizontalGroup(
                        addbtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                );
                addbtn2Layout.setVerticalGroup(
                        addbtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addbtn2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                removebtn2.setBackground(new java.awt.Color(166, 166, 166));
                removebtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                removebtn2.setMaximumSize(new java.awt.Dimension(73, 25));
                removebtn2.setMinimumSize(new java.awt.Dimension(73, 25));
                removebtn2.setName("button"); // NOI18N
                removebtn2.setPreferredSize(new java.awt.Dimension(97, 25));
                removebtn2.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                removebtn2MouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                removebtn2MouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                removebtn2MouseExited(evt);
                        }
                });

                removeLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                removeLabel2.setText("Remove");
                removeLabel2.setName("buttonLabel"); // NOI18N

                javax.swing.GroupLayout removebtn2Layout = new javax.swing.GroupLayout(removebtn2);
                removebtn2.setLayout(removebtn2Layout);
                removebtn2Layout.setHorizontalGroup(
                        removebtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(removeLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                );
                removebtn2Layout.setVerticalGroup(
                        removebtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(removeLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                );

                customThemeButton.setBackground(new java.awt.Color(166, 166, 166));
                customThemeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                customThemeButton.setMaximumSize(new java.awt.Dimension(73, 25));
                customThemeButton.setMinimumSize(new java.awt.Dimension(73, 25));
                customThemeButton.setName("button"); // NOI18N
                customThemeButton.setPreferredSize(new java.awt.Dimension(73, 25));
                customThemeButton.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                customThemeButtonMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                customThemeButtonMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                customThemeButtonMouseExited(evt);
                        }
                });

                themeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                themeLabel.setText("Custom Theme");
                themeLabel.setName("buttonLabel"); // NOI18N
                themeLabel.setPreferredSize(new java.awt.Dimension(73, 25));

                javax.swing.GroupLayout customThemeButtonLayout = new javax.swing.GroupLayout(customThemeButton);
                customThemeButton.setLayout(customThemeButtonLayout);
                customThemeButtonLayout.setHorizontalGroup(
                        customThemeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(themeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                customThemeButtonLayout.setVerticalGroup(
                        customThemeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(customThemeButtonLayout.createSequentialGroup()
                                .addComponent(themeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                issuesLinkLabel.setText("Report an issue");
                issuesLinkLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                issuesLinkLabel.setName("label"); // NOI18N
                issuesLinkLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                issuesLinkLabelMouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
                settingsPanel.setLayout(settingsPanelLayout);
                settingsPanelLayout.setHorizontalGroup(
                        settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(87, 87, 87)
                                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(fontsList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(extensionField, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                .addComponent(fileDirectory, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(mediaPlayerPath, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                                                                                .addComponent(themesList, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(customThemeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                                                        .addComponent(changeFDbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                                                        .addComponent(changeMPbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(addbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(removebtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(issuesLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18))
                );
                settingsPanelLayout.setVerticalGroup(
                        settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(settingsPanelLayout.createSequentialGroup()
                                .addContainerGap(53, Short.MAX_VALUE)
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fontsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel4)
                                                .addComponent(themesList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(customThemeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel3)
                                                .addComponent(fileDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(changeFDbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(mediaPlayerPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(changeMPbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(extensionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(addbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(removebtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                                .addComponent(issuesLinkLabel)
                                .addContainerGap())
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(settingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(settingsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void issuesLinkLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_issuesLinkLabelMouseClicked
                try {
                        GUIMethods.openWebpage(new URL("https://dmg-techlabs.github.io/Movie-Manager-Website/report-issues.html"));
                } catch (MalformedURLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }//GEN-LAST:event_issuesLinkLabelMouseClicked

        private void customThemeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customThemeButtonMouseExited
                customThemeButton.setBackground(theme.getButton());
        }//GEN-LAST:event_customThemeButtonMouseExited

        private void customThemeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customThemeButtonMouseEntered
                customThemeButton.setBackground(theme.getButtonHover());
        }//GEN-LAST:event_customThemeButtonMouseEntered

        private void customThemeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customThemeButtonMouseClicked
                tf = new CustomThemeFrame(f);

                ImageIcon img = new ImageIcon(System.getProperty("user.dir").replaceAll(Pattern.quote("\\"), "/") + "/assets/palette-solid.png");

                        tf.setIconImage(img.getImage());

                        tf.setVisible(true);
        }//GEN-LAST:event_customThemeButtonMouseClicked

        private void removebtn2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removebtn2MouseExited
                removebtn2.setBackground(theme.getButton());
        }//GEN-LAST:event_removebtn2MouseExited

        private void removebtn2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removebtn2MouseEntered
                removebtn2.setBackground(theme.getButtonHover());
        }//GEN-LAST:event_removebtn2MouseEntered

        private void removebtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removebtn2MouseClicked
                int i = extensionsList.getSelectedIndex();
                String ext = extensionsList.getSelectedValue();

                lm.remove(i);

                try {
                        Database.db().DELETE("Extensions", "Extension", ext);
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                f.movies.removeExtension(ext);
                f.movies.refreshMovies();
                f.refreshMoviesList();
        }//GEN-LAST:event_removebtn2MouseClicked

        private void addbtn2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtn2MouseExited
                addbtn2.setBackground(theme.getButton());
        }//GEN-LAST:event_addbtn2MouseExited

        private void addbtn2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtn2MouseEntered
                addbtn2.setBackground(theme.getButtonHover());
        }//GEN-LAST:event_addbtn2MouseEntered

        private void addbtn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtn2MouseClicked
                String ext = extensionField.getText().trim();

                if (ext == null || ext.isBlank() || ext.isEmpty()) {
                        return;
                }

                lm.addElement(ext);

                try {
                        Database.db().INSERT("Extensions", "Extension", ext);
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                f.movies.addExtension(ext);
                f.movies.setDir(f.dir);

                f.movies.refreshMovies();
                f.refreshMoviesList();
                extensionField.setText("");
        }//GEN-LAST:event_addbtn2MouseClicked

        private void changeMPbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeMPbtnMouseExited
                changeMPbtn.setBackground(theme.getButton());
        }//GEN-LAST:event_changeMPbtnMouseExited

        private void changeMPbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeMPbtnMouseEntered
                changeMPbtn.setBackground(theme.getButtonHover());
        }//GEN-LAST:event_changeMPbtnMouseEntered

        private void changeMPbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeMPbtnMouseClicked
                String dir = "";
                int UserChoice = jFileChooser2.showOpenDialog(SettingsFrame.this);

                if (UserChoice == JFileChooser.APPROVE_OPTION) {
                        File SelectedFile = jFileChooser2.getSelectedFile();
                        dir = SelectedFile.getPath();
                        mediaPlayerPath.setText(dir);
                }

                if (UserChoice == JFileChooser.CANCEL_OPTION) {
                        mediaPlayerPath.setText("No File Selected");
                }

                try {
                        Database.db().UPDATE("Settings", "Media_Player", dir, new Condition("Αναγνωριστικό", 1));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }//GEN-LAST:event_changeMPbtnMouseClicked

        private void changeFDbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeFDbtnMouseExited
                changeFDbtn.setBackground(theme.getButton());
        }//GEN-LAST:event_changeFDbtnMouseExited

        private void changeFDbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeFDbtnMouseEntered
                changeFDbtn.setBackground(theme.getButtonHover());
        }//GEN-LAST:event_changeFDbtnMouseEntered

        private void changeFDbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeFDbtnMouseClicked
                String dir = "";
                int UserChoice = jFileChooser1.showOpenDialog(SettingsFrame.this);

                if (UserChoice == JFileChooser.APPROVE_OPTION) {
                        File SelectedFile = jFileChooser1.getSelectedFile();
                        dir = SelectedFile.getPath();
                        fileDirectory.setText(dir);
                }

                if (UserChoice == JFileChooser.CANCEL_OPTION) {
                        fileDirectory.setText("No File Selected");
                }

                try {
                        Database.db().UPDATE("Settings", "Directory", dir, new Condition("Αναγνωριστικό", 1));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                f.dir = dir;
        }//GEN-LAST:event_changeFDbtnMouseClicked

        private void changeFDLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeFDLabelMouseExited
                changeFDbtn.setBackground(theme.getButton());
        }//GEN-LAST:event_changeFDLabelMouseExited

        private void changeFDLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeFDLabelMouseEntered
                changeFDbtn.setBackground(theme.getButtonHover());
        }//GEN-LAST:event_changeFDLabelMouseEntered

        private void changeFDLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeFDLabelMouseClicked
                changeFDbtnMouseClicked(evt);
        }//GEN-LAST:event_changeFDLabelMouseClicked

        private void extensionFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extensionFieldKeyPressed
                String ext = extensionField.getText().trim();

                if (evt.getKeyCode() == 10) {
                        lm.addElement(ext);
                }
        }//GEN-LAST:event_extensionFieldKeyPressed

        private void fontsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontsListActionPerformed
                String s = fontsList.getSelectedItem().toString();
                GUIMethods.changeGlobalFont(new Component[]{this, f}, 4, s);

                try {
                        Database.db().UPDATE("Settings", "Font", s, new Condition("Αναγνωριστικό", 1));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }//GEN-LAST:event_fontsListActionPerformed

        private void mediaPlayerPathKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mediaPlayerPathKeyPressed
                if (evt.getKeyCode() == 10) {
                        String dir = mediaPlayerPath.getText();

                        try {
                                Database.db().UPDATE("Settings", "Media_Player", dir, new Condition("Αναγνωριστικό", 1));
                        } catch (SQLException ex) {
                                Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        mediaPlayerPath.setText(dir);
                        this.getRootPane().requestFocus();
                }
        }//GEN-LAST:event_mediaPlayerPathKeyPressed

        private void themesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themesListActionPerformed
                String themeName = themesList.getSelectedItem().toString();
                Theme selectedTheme = new ThemeCollection().matchThemes(themeName);

                System.out.println("Selected Theme: " + themeName);

                try {
                        Database.db().UPDATE("Settings", "Theme", themeName, new Condition("Αναγνωριστικό", 1));
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                f.setTheme(selectedTheme);
                ef.setTheme(selectedTheme);
                this.theme = selectedTheme;
                ThemeCollection.implementTheme(this, selectedTheme);
                ThemeCollection.implementTheme(f, selectedTheme);
                ThemeCollection.implementTheme(ef, selectedTheme);
        }//GEN-LAST:event_themesListActionPerformed

        private void fileDirectoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fileDirectoryKeyPressed
                if (evt.getKeyCode() == 10) {
                        String dir = fileDirectory.getText();

                        try {
                                Database.db().UPDATE("Settings", "Directory", dir, new Condition("Αναγνωριστικό", 1));
                        } catch (SQLException ex) {
                                Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        fileDirectory.setText(dir);
                        this.getRootPane().requestFocus();
                }
        }//GEN-LAST:event_fileDirectoryKeyPressed

        public Theme getTheme() {
                return theme;
        }

        public void setTheme(Theme theme) {
                this.theme = theme;
                ThemeCollection.implementTheme(this, theme);
        }

        public void refreshThemeCombo() {
                ArrayList<String> themeNames = new ArrayList<>();
                ArrayList<Object> objectList = new ArrayList<>();
                try {
                        objectList = Database.db().SELECT("Themes", "Theme_Name");
                } catch (SQLException ex) {
                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                for (Object obj : objectList) {
                        themeNames.add((String) obj);
                }

                themeNames.add(0, "Default");

                themesList.setModel(new DefaultComboBoxModel(themeNames.toArray()));
        }

        public static void main(String args[]) throws ClassNotFoundException, IllegalAccessException, UnsupportedLookAndFeelException, InstantiationException {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                try {
                                        new SettingsFrame().setVisible(true);
                                } catch (SQLException ex) {
                                        Logger.getLogger(SettingsFrame.class.getName()).log(Level.SEVERE, null, ex);
                                }
                        }
                });
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel addLabel2;
        private javax.swing.JPanel addbtn2;
        private javax.swing.JLabel changeFDLabel;
        private javax.swing.JPanel changeFDbtn;
        private javax.swing.JLabel changeMPLabel;
        private javax.swing.JPanel changeMPbtn;
        private javax.swing.JPanel customThemeButton;
        private javax.swing.JTextField extensionField;
        private javax.swing.JList<String> extensionsList;
        private javax.swing.JTextField fileDirectory;
        private javax.swing.JComboBox<String> fontsList;
        private javax.swing.JLabel issuesLinkLabel;
        private javax.swing.JFileChooser jFileChooser1;
        private javax.swing.JFileChooser jFileChooser2;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JTextField mediaPlayerPath;
        private javax.swing.JLabel removeLabel2;
        private javax.swing.JPanel removebtn2;
        private javax.swing.JPanel settingsPanel;
        private javax.swing.JLabel themeLabel;
        private javax.swing.JComboBox<String> themesList;
        // End of variables declaration//GEN-END:variables
}
